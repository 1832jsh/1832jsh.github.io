<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>
<HEAD>
   <TITLE>Memory ECC Syndromes and Addressing</TITLE>
   <!-- This file created by Carmen Wheatcroft - Workstation Doc Group-->
   <!-- Copyright (c) 1998 Digital Equipment Corporation-->
</HEAD>

<BODY TEXT="#000000" BGCOLOR="#FFFFFF">

<H3>Memory ECC Syndromes and Addressing</H3>

<P>When PYXIS detects a correctable ECC error, the ECC syndrome for the
high quadword is latched on error into the ERROR_SYNDROME1 field in
PYXIS_SYN&lt;15:8&gt;; the ECC syndrome for the low quadword is saved in the
ERROR_SYNDROME0 field in PYXIS_SYN&lt;7:0&gt;.</P>

<P>When the CPU detects a correctable ECC error, the ECC syndrome for the
high quadword is latched on error into FILL_SYN&lt;15:8&gt;.  The ECC
syndrome for the low quadword is saved in FILL_SYN&lt;7:0&gt;.</P>

<P>See the tables below for decoding single bit errors in the data and
check bits.  A syndrome of 0 (zero) implies no error in that quadword.  If
the syndrome is not in the table, then the error involved more than one bit. 
<STRONG>Data bit numbers shown are in the low quadword; for
errors in the high quadword, add 64 to the data bit number.</STRONG></P>

<A HREF="#sort_by_synd"><IMG SRC="../images/bullet.gif" WIDTH=10 HEIGHT=10 BORDER=0> 
List of ECC syndrome codes sorted by syndrome.</A><BR>
<A HREF="#sort_by_data"><IMG SRC="../images/bullet.gif" WIDTH=10 HEIGHT=10 BORDER=0> 
List of ECC syndrome codes sorted by data bit.</A>

<P>When PYXIS detects a memory error, the memory address is
latched into the MEAR and MESR registers.  MEAR&lt;31:4&gt; contains
ERROR_ADDR&lt;31:4&gt;; MESR&lt;1:0&gt; contains ERROR_ADDR&lt;33:32&gt;.</P>

<P>The physical DIMM associated with this address can be identified by
inspecting the BBARx and BCRx registers (where "x" is the memory bank
number 0 [zero] through 2 [two]).</P>

<TABLE BORDER=1>
<CAPTION><STRONG>Memory DIMM Connectors</STRONG></CAPTION>
<TR><TH>Bank</TH><TH>Low Quadword<BR>Connector</TH><TH>High Quadword<BR>
Connector</TH></TR>
<TR ALIGN="MIDDLE"><TD>0</TD><TD>J1</TD><TD>J2</TD></TR>
<TR ALIGN="MIDDLE"><TD>1</TD><TD>J3</TD><TD>J4</TD></TR>
<TR ALIGN="MIDDLE"><TD>2</TD><TD>J5</TD><TD>J6</TD></TR>
</TABLE>

<P></P>

<TABLE BORDER=1 >
<CAPTION><A NAME="sort_by_synd"><STRONG>ECC Syndrome Codes (Sorted by Syndrome Bits)
<BR>(CB = Check Bit)</STRONG></A></CAPTION>

<TR><TH>Syn Code/<BR>Data Bit</TH><TH>Syn Code/<BR>Data Bit</TH>
<TH>Syn Code/<BR>Data Bit</TH><TH>Syn Code/<BR>Data Bit</TH><TH>Syn Code/<BR>
Data Bit</TH></TR>
<TR><TD>01 / CB0</TD><TD>26 / 10</TD><TD>64 / 57</TD><TD>A2 / 40</TD><TD>E3 / 24</TD></TR>
<TR><TD>02 / CB1</TD><TD>29 / 11</TD><TD>67 / 58</TD><TD>A4 / 41</TD><TD>E5 / 25</TD></TR>
<TR><TD>04 / CB2</TD><TD>2A / 12</TD><TD>68 / 59</TD><TD>A7 / 42</TD><TD>E6 / 26</TD></TR>
<TR><TD>08 / CB3</TD><TD>2C / 13</TD><TD>6B / 60</TD><TD>A8 / 43</TD><TD>E9 / 27</TD></TR>
<TR><TD>0B / 17</TD><TD>31 / 14</TD><TD>6D / 61</TD><TD>AB / 44</TD><TD>EA / 28</TD></TR>
<TR><TD>0E / 16</TD><TD>34 / 15</TD><TD>70 / 62</TD><TD>AD / 45</TD><TD>EC / 29</TD></TR>
<TR><TD>10 / CB4</TD><TD>40 / CB6</TD><TD>75 / 63</TD><TD>B0 / 46</TD><TD>F1 / 30</TD></TR>
<TR><TD>13 / 18</TD><TD>4A / 33</TD><TD>80 / CB7</TD><TD>B5 / 47</TD><TD>F4 / 31</TD></TR>
<TR><TD>15 / 19</TD><TD>4F / 32</TD><TD>8A / 49</TD><TD>CB / 1</TD></TR>
<TR><TD>16 / 20</TD><TD>52 / 34</TD><TD>8F / 48</TD><TD>CE / 0</TD></TR>
<TR><TD>19 / 21</TD><TD>54 / 35</TD><TD>92 / 50</TD><TD>D3 / 2</TD></TR>
<TR><TD>1A / 22</TD><TD>57 / 36</TD><TD>94 / 51</TD><TD>D5 / 3</TD></TR>
<TR><TD>1C / 23</TD><TD>58 / 37</TD><TD>97 / 52</TD><TD>D6 / 4</TD></TR>
<TR><TD>20 / CB5</TD><TD>5B / 38</TD><TD>98 / 53</TD><TD>D9 / 5</TD></TR>
<TR><TD>23 / 8</TD><TD>5D / 39</TD><TD>9B / 54</TD><TD>DA / 6</TD></TR>
<TR><TD>25 / 9</TD><TD>62 / 56</TD><TD>9D / 55</TD><TD>DC / 7</TD></TR>
</TABLE>

<P></P>

<TABLE BORDER=1 >
<CAPTION><A NAME="sort_by_data"><STRONG>ECC Syndrome Codes (Sorted by Data Bits)
<BR>(CB = Check Bit)</STRONG></A></CAPTION>

<TR><TH>Data Bit/<BR>Syn Code</TH><TH>Data Bit/<BR>Syn Code</TH>
<TH>Data Bit/<BR>Syn Code</TH><TH>Data Bit/<BR>Syn Code</TH>
<TH>Check Bit/<BR>Syn Code</TH></TR>
<TR><TD>0 / CE</TD><TD>16 / 0E</TD><TD>32 / 4F</TD><TD>48 / 8F</TD><TD>0 / 01</TD></TR>
<TR><TD>1 / CB</TD><TD>17 / 0B</TD><TD>33 / 4A</TD><TD>49 / 8A</TD><TD>1 / 02</TD></TR>
<TR><TD>2 / D3</TD><TD>18 / 13</TD><TD>34 / 52</TD><TD>50 / 92</TD><TD>2 / 04</TD></TR>
<TR><TD>3 / D5</TD><TD>19 / 15</TD><TD>35 / 54</TD><TD>51 / 94</TD><TD>3 / 08</TD></TR>
<TR><TD>4 / D6</TD><TD>20 / 16</TD><TD>36 / 57</TD><TD>52 / 97</TD><TD>4 / 10</TD></TR>
<TR><TD>5 / D9</TD><TD>21 / 19</TD><TD>37 / 58</TD><TD>53 / 98</TD><TD>5 / 20</TD></TR>
<TR><TD>6 / DA</TD><TD>22 / 1A</TD><TD>38 / 5B</TD><TD>54 / 9B</TD><TD>6 / 40</TD></TR>
<TR><TD>7 / DC</TD><TD>23 / 1C</TD><TD>39 / 5D</TD><TD>55 / 9D</TD><TD>7 / 80</TD></TR>
<TR><TD>8 / 23</TD><TD>24 / E3</TD><TD>40 / A2</TD><TD>56 / 62</TD></TR>
<TR><TD>9 / 25</TD><TD>25 / E5</TD><TD>41 / A4</TD><TD>57 / 64</TD></TR>
<TR><TD>10 / 26</TD><TD>26 / E6</TD><TD>42 / A7</TD><TD>58 / 67</TD></TR>
<TR><TD>11 / 29</TD><TD>27 / E9</TD><TD>43 / A8</TD><TD>59 / 68</TD></TR>
<TR><TD>12 / 2A</TD><TD>28 / EA</TD><TD>44 / AB</TD><TD>60 / 6B</TD></TR>
<TR><TD>13 / 2C</TD><TD>29 / EC</TD><TD>45 / AD</TD><TD>61 / 6D</TD></TR>
<TR><TD>14 / 31</TD><TD>30 / F1</TD><TD>46 / B0</TD><TD>62 / 70</TD></TR>
<TR><TD>15 / 34</TD><TD>31 / F4</TD><TD>47 / B5</TD><TD>63 / 75</TD></TR>
</TABLE>

</BODY>
</HTML>
